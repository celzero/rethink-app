// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '2.1.20'
    repositories {
        google()
        // https://jfrog.com/blog/into-the-sunset-bintray-jcenter-gocenter-and-chartcenter/
        // jcenter() is no longer getting updates, instead using mavenCentral
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.13.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // add firebase plugins - will be conditionally applied in app/build.gradle
        def taskNames = gradle.startParameter.taskNames.join(',').toLowerCase()
        def isFdroidBuild = taskNames.contains("fdroid")
        println("gradle-task names: $taskNames")
        println("is fdroid build? $isFdroidBuild")
        if (!isFdroidBuild) {
            classpath 'com.google.gms:google-services:4.4.3'
            classpath 'com.google.firebase:firebase-crashlytics-gradle:3.0.6'
        }
    }
}

plugins {
    id 'com.google.devtools.ksp' version '2.1.20-2.0.1' apply false
}

allprojects {
    repositories {
        google()
        mavenCentral()

        def firestackRepo = project.findProperty("firestackRepo") ?: "github"

        if (firestackRepo == "jitpack") {
            // jitpack.io/#celzero/firestack
            maven { url 'https://jitpack.io' }
        } else if (firestackRepo == "github") {
            // maven.pkg.github.com/celzero/firestack
            maven {
                name = 'GitHubPackages'
                url = uri("https://maven.pkg.github.com/celzero/firestack")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("USERNAME_GITHUB")
                    password = project.findProperty("gpr.key") ?: System.getenv("TOKEN_GITHUB")
                }
            }
        } else {
            // ossrh: https://central.sonatype.com/artifact/com.celzero/firestack/
            // no-op; mavenCentral is already included
        }
    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}
